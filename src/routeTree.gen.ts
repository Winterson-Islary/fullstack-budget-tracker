/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutUserRouteImport } from './routes/_layout/user/route'
import { Route as authSignUpIndexImport } from './routes/(auth)/sign-up/index'
import { Route as authSignInIndexImport } from './routes/(auth)/sign-in/index'
import { Route as authSignUpSplatImport } from './routes/(auth)/sign-up/$'
import { Route as authSignInSplatImport } from './routes/(auth)/sign-in/$'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const LayoutUserRouteRoute = LayoutUserRouteImport.update({
  path: '/user',
  getParentRoute: () => LayoutRoute,
} as any)

const authSignUpIndexRoute = authSignUpIndexImport.update({
  path: '/sign-up/',
  getParentRoute: () => rootRoute,
} as any)

const authSignInIndexRoute = authSignInIndexImport.update({
  path: '/sign-in/',
  getParentRoute: () => rootRoute,
} as any)

const authSignUpSplatRoute = authSignUpSplatImport.update({
  path: '/sign-up/$',
  getParentRoute: () => rootRoute,
} as any)

const authSignInSplatRoute = authSignInSplatImport.update({
  path: '/sign-in/$',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout/user': {
      preLoaderRoute: typeof LayoutUserRouteImport
      parentRoute: typeof LayoutImport
    }
    '/(auth)/sign-in/$': {
      preLoaderRoute: typeof authSignInSplatImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up/$': {
      preLoaderRoute: typeof authSignUpSplatImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in/': {
      preLoaderRoute: typeof authSignInIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up/': {
      preLoaderRoute: typeof authSignUpIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  LayoutRoute.addChildren([LayoutUserRouteRoute]),
  AboutLazyRoute,
  authSignInSplatRoute,
  authSignUpSplatRoute,
  authSignInIndexRoute,
  authSignUpIndexRoute,
])

/* prettier-ignore-end */
